ext.deps = [:]
def versions = [:]
versions.dagger = '2.24'
versions.room = '2.1.0'
versions.lifecycle = '2.1.0'
versions.paging = "2.1.0"
versions.rxJava = "2.2.7"
versions.rxKotlin = "2.3.0"
versions.rxAndroid = "2.1.0"
versions.retrofit = '2.6.1'
versions.gson = "2.8.5"
versions.okhttp = '4.7.2'
versions.okhttpwebsocket = "3.4.2"
versions.kodein = "5.3.0"
versions.glide = "4.8.0"
versions.recyclerview = "1.0.0"
versions.constraintlayout = "1.1.3"
versions.appcompat = '1.1.0'
versions.cardview = "1.0.0"
versions.drawerlayout = "1.0.0"
versions.coordinatorlayout = "1.0.0-alpha1"
versions.palette = "1.0.0"
versions.gridlayout = "1.0.0"
versions.design = '1.3.0-alpha01'
versions.moshi = "1.8.0"
versions.picasso = "2.71828"
versions.stetho = "1.5.1"
versions.rxpermissions = "0.10.2"
versions.rxbinding = '3.0.0'
versions.arrow = "0.9.0"
versions.sharedpref = "0.6.2"
versions.fragmentmanger = "2.8.2"
versions.timber = "4.7.1"
versions.camerax = '1.0.0-beta06'
versions.zxing = '3.4.0'
versions.tadapter = '0.7.0'
versions.rxutils = "0.1.1"
versions.kotlincroutines = "1.3.5"

def view = [:]
// androidx view
view.recyclerview = "androidx.recyclerview:recyclerview:$versions.recyclerview"
view.constraintlayout = "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"
view.appcompat = "androidx.appcompat:appcompat:$versions.appcompat"
view.cardview = "androidx.cardview:cardview:$versions.cardview"
view.drawerlayout = "androidx.drawerlayout:drawerlayout:$versions.drawerlayout"
view.coordinatorlayout = "androidx.coordinatorlayout:coordinatorlayout:$versions.coordinatorlayout"
view.palette = "androidx.palette:palette:$versions.palette"
view.gridlayout = "androidx.gridlayout:gridlayout:$versions.gridlayout"
view.design = "com.google.android.material:material:$versions.design"
ext.deps.view = view

def dagger = [:]
// Dagger
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
ext.deps.dagger = dagger

// Room
def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.common = "androidx.room:room-common:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
ext.deps.room = room

// Lifecycle
def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.common = "androidx.lifecycle:lifecycle-common:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.livedata = "androidx.lifecycle:lifecycle-livedata:$versions.lifecycle"
lifecycle.viewmodel = "androidx.lifecycle:lifecycle-viewmodel:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
ext.deps.lifecycle = lifecycle

// Paging
def paging = [:]
paging.runtime = "androidx.paging:paging-runtime:$versions.paging"
paging.common = "androidx.paging:paging-common:$versions.paging"
paging.runtimeKtx = "androidx.paging:paging-runtime-ktx:$versions.paging"
paging.rxjava2 = "androidx.paging:paging-rxjava2:$versions.paging"
paging.commonKtx = "androidx.paging:paging-common-ktx:$versions.paging"
paging.rxkotlin = "androidx.paging:paging-rxjava2-ktx:$versions.paging"
ext.deps.paging = paging

// RX
def rxJava = [:]
rxJava.runtime = "io.reactivex.rxjava2:rxjava:$versions.rxJava"
rxJava.kotlin = "io.reactivex.rxjava2:rxkotlin:$versions.rxKotlin"
ext.deps.rxJava = rxJava

// RxAndroid
def rxAndroid = [:]
rxAndroid.runtime = "io.reactivex.rxjava2:rxandroid:$versions.rxAndroid"
ext.deps.rxAndroid = rxAndroid

// Retrofit
def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.converterGson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.converterMoshi = "com.squareup.retrofit2:converter-moshi:$versions.retrofit"
retrofit.adapterRxJava2 = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
ext.deps.retrofit = retrofit

// Gson
def gson = [:]
gson.runtime = "com.google.code.gson:gson:$versions.gson"
ext.deps.gson = gson

// Moshi
def moshi = [:]
moshi.runtime = "com.squareup.moshi:moshi:$versions.moshi"
moshi.ktx = "com.squareup.moshi:moshi-kotlin:$versions.moshi"
moshi.adapters = "com.squareup.moshi:moshi-adapters:$versions.moshi"
moshi.ktxCodegen = "com.squareup.moshi:moshi-kotlin-codegen:$versions.moshi"
ext.deps.moshi = moshi

// Okhttp
def okhttp = [:]
okhttp.runtime = "com.squareup.okhttp3:okhttp:$versions.okhttp"
okhttp.loggingInterceptor = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"
okhttp.mockwebserver = "com.squareup.okhttp3:mockwebserver:$versions.okhttp"
ext.deps.okhttp = okhttp

// Okhttp-WebSocket
def okhttpwebsocket = [:]
okhttpwebsocket.runtime = "com.squareup.okhttp3:okhttp-ws:$versions.okhttpwebsocket"
ext.deps.okhttpwebsocket = okhttpwebsocket

// Kodein
def kodein = [:]
kodein.runtime = "org.kodein.di:kodein-di-generic-jvm:$versions.kodein"
kodein.androidFramework = "org.kodein.di:kodein-di-framework-android-core:$versions.kodein"
kodein.androidFrameworkSupport = "org.kodein.di:kodein-di-framework-android-support:$versions.kodein"
ext.deps.kodein = kodein

// Glide
def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
ext.deps.glide = glide

// Picasso
def picasso = [:]
picasso.runtime = "com.squareup.picasso:picasso:$versions.picasso"
ext.deps.picasso = picasso

// Stetho
def stetho = [:]
stetho.runtime = "com.facebook.stetho:stetho:$versions.stetho"
stetho.okhttp = "com.facebook.stetho:stetho-okhttp3:$versions.stetho"
ext.deps.stetho = stetho

// RxPermissions
def rxpermissions = [:]
rxpermissions.runtime = "com.github.tbruyelle:rxpermissions:$versions.rxpermissions"
ext.deps.rxpermissions = rxpermissions

// RxBinding
def rxbinding = [:]
rxbinding.runtime = "com.jakewharton.rxbinding3:rxbinding:$versions.rxbinding"
rxbinding.core = "com.jakewharton.rxbinding3:rxbinding-appcompat:$versions.rxbinding"
rxbinding.appcompat = "com.jakewharton.rxbinding3:rxbinding-appcompat:$versions.rxbinding"
rxbinding.drawerlayout = "com.jakewharton.rxbinding3:rxbinding-drawerlayout:$versions.rxbinding"
rxbinding.leanback = "com.jakewharton.rxbinding3:rxbinding-leanback:$versions.rxbinding"
rxbinding.recyclerview = "com.jakewharton.rxbinding3:rxbinding-recyclerview:$versions.rxbinding"
rxbinding.slidingpanelayout = "com.jakewharton.rxbinding3:rxbinding-slidingpanelayout:$versions.rxbinding"
rxbinding.swiperefreshlayout = "com.jakewharton.rxbinding3:rxbinding-swiperefreshlayout:$versions.rxbinding"
rxbinding.viewpager = "com.jakewharton.rxbinding3:rxbinding-viewpager:$versions.rxbinding"
ext.deps.rxbinding = rxbinding

// Arrow
def arrow = [:]
arrow.coredata = "io.arrow-kt:arrow-core-data:$versions.arrow"
arrow.coreextensions = "io.arrow-kt:arrow-core-extensions:$versions.arrow"
arrow.syntax = "io.arrow-kt:arrow-syntax:$versions.arrow"
arrow.typeclasses = "io.arrow-kt:arrow-typeclasses:$versions.arrow"
arrow.extrasdata = "io.arrow-kt:arrow-extras-data:$versions.arrow"
arrow.extrasextensions = "io.arrow-kt:arrow-extras-extensions:$versions.arrow"
arrow.meta = "io.arrow-kt:arrow-meta:$versions.arrow"
ext.deps.arrow = arrow

// sharedpref
def sharedpref = [:]
sharedpref.runtime = "com.github.Yumenokanata.SimpleSharedPref:simplesharedpref:$versions.sharedpref"
sharedpref.moshi = "com.github.Yumenokanata.SimpleSharedPref:moshi-pref:$versions.sharedpref"
ext.deps.sharedpref = sharedpref

// FragmentManager
def fragmentmanger = [:]
fragmentmanger.runtime = "com.github.Yumenokanata:FragmentManager:$versions.fragmentmanger"
ext.deps.fragmentmanager = fragmentmanger

// Timber
def timber = [:]
timber.runtime = "com.jakewharton.timber:timber:$versions.timber"
ext.deps.timber = timber

// CameraX
def camerax = [:]
camerax.runtime = "androidx.camera:camera-core:$versions.camerax"
camerax.camera2 = "androidx.camera:camera-camera2:$versions.camerax"
camerax.lifecycle = "androidx.camera:camera-lifecycle:$versions.camerax"
ext.deps.camerax = camerax

// zxing
def zxing = [:]
zxing.runtime = "com.google.zxing:core:$versions.zxing"
ext.deps.zxing = zxing

// tAdapter
def tadapter = [:]
tadapter.runtime = "com.github.Tans5:tAdapter:$versions.tadapter"
ext.deps.tadapter = tadapter

// rxutils
def rxutils = [:]
rxutils.runtime = "com.github.Tans5:RxUtils:$versions.rxutils"
ext.deps.rxutils = rxutils


// Kotlin coroutines
def coroutines = [:]
coroutines.runtime = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlincroutines"
coroutines.android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlincroutines"
coroutines.rx = "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:$versions.kotlincroutines"
ext.deps.coroutines = coroutines